{"version":3,"sources":["components/MatchCard/MatchCard.js","components/Wrapper/Wrapper.js","components/Title/Title.js","App.js","index.js"],"names":["MatchCard","props","onClick","setClicked","id","className","alt","name","src","image","Wrapper","children","Title","correctGuesses","bestScore","clickMessage","App","state","matches","clickedMatch","filter","match","clicked","console","log","i","length","setState","sort","a","b","Math","random","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"wmCAWeA,G,MARG,SAACC,GAAD,OAChB,yBAAKC,QAAS,kBAAMD,EAAME,WAAWF,EAAMG,KAAKC,UAAU,iBACxD,yBAAKA,UAAU,iBACb,yBAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,YCDxBC,G,MAFC,SAACT,GAAD,OAAW,yBAAKI,UAAU,WAAWJ,EAAMU,YCE5CC,G,MAFD,SAACX,GAAD,OAAW,wBAAII,UAAU,SAASJ,EAAMU,Y,OCIlDE,G,MAAiB,GACjBC,EAAY,EACZC,EACF,oFAqHaC,E,4MAjHbC,MAAQ,CACNC,UACAL,iBACAC,YACAC,gB,EAGFZ,WAAa,SAACC,GAEZ,IAAMc,EAAU,EAAKD,MAAMC,QAGrBC,EAAeD,EAAQE,QAAO,SAACC,GAAD,OAAWA,EAAMjB,KAAOA,KAI5D,GAAIe,EAAa,GAAGG,QAAS,CAC3BC,QAAQC,IAAI,oBAAsBX,GAClCU,QAAQC,IAAI,eAAiBV,GAE7BD,EAAiB,EACjBE,EAAe,2CAEf,IAAK,IAAIU,EAAI,EAAGA,EAAIP,EAAQQ,OAAQD,IAClCP,EAAQO,GAAGH,SAAU,EAGvB,EAAKK,SAAS,CAAEZ,iBAChB,EAAKY,SAAS,CAAEd,mBAChB,EAAKc,SAAS,CAAET,iBAGX,GAAIL,EAAiB,GAE1BM,EAAa,GAAGG,SAAU,EAG1BT,IAEAE,EAAe,wDAEXF,EAAiBC,IACnBA,EAAYD,EACZ,EAAKc,SAAS,CAAEb,eAIlBI,EAAQU,MAAK,SAAUC,EAAGC,GACxB,MAAO,GAAMC,KAAKC,YAIpB,EAAKL,SAAS,CAAET,YAChB,EAAKS,SAAS,CAAEd,mBAChB,EAAKc,SAAS,CAAEZ,qBACX,CAELI,EAAa,GAAGG,SAAU,EAG1BT,EAAiB,EAGjBE,EACE,uEACFD,EAAY,GACZ,EAAKa,SAAS,CAAEb,cAEhB,IAAK,IAAIW,EAAI,EAAGA,EAAIP,EAAQQ,OAAQD,IAClCP,EAAQO,GAAGH,SAAU,EAIvBJ,EAAQU,MAAK,SAAUC,EAAGC,GACxB,MAAO,GAAMC,KAAKC,YAIpB,EAAKL,SAAS,CAAET,YAChB,EAAKS,SAAS,CAAEd,mBAChB,EAAKc,SAAS,CAAEZ,mB,uDAIV,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,0BAEA,wBAAIV,UAAU,gBAAgB4B,KAAKhB,MAAMF,cAEzC,wBAAIV,UAAU,4BAAd,oBACoB4B,KAAKhB,MAAMJ,eAC7B,6BAFF,eAGeoB,KAAKhB,MAAMH,WAE1B,yBAAKT,UAAU,aACb,yBAAKA,UAAU,OACZ4B,KAAKhB,MAAMC,QAAQgB,KAAI,SAACb,GAAD,OACtB,kBAAC,EAAD,CACElB,WAAY,EAAKA,WACjBC,GAAIiB,EAAMjB,GACV+B,IAAKd,EAAMjB,GACXK,MAAOY,EAAMZ,kB,GAzGX2B,aCPlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.80626328.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./MatchCard.css\";\r\n\r\nconst MatchCard = (props) => (\r\n  <div onClick={() => props.setClicked(props.id)} className=\"card col-md-3\">\r\n    <div className=\"img-container\">\r\n      <img alt={props.name} src={props.image} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default MatchCard;\r\n","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = (props) => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./Title.css\";\r\n\r\nconst Title = (props) => <h1 className=\"title\">{props.children}</h1>;\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\nimport MatchCard from \"./components/MatchCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport matches from \"./matchcards.json\";\nimport \"./app.css\";\n\nlet correctGuesses = 0;\nlet bestScore = 0;\nlet clickMessage =\n  \"Click on a movie poster to gain points! Click on the same one twice and you lose!\";\n\nclass App extends Component {\n  // Setting this.state.matches to the matches json array\n  state = {\n    matches,\n    correctGuesses,\n    bestScore,\n    clickMessage,\n  };\n\n  setClicked = (id) => {\n    // Make a copy of the state matches array to work with\n    const matches = this.state.matches;\n\n    // Filter for the clicked match\n    const clickedMatch = matches.filter((match) => match.id === id);\n\n    // If the matched image's clicked value is already true,\n    // do the game over actions\n    if (clickedMatch[0].clicked) {\n      console.log(\"Correct Guesses: \" + correctGuesses);\n      console.log(\"Best Score: \" + bestScore);\n\n      correctGuesses = 0;\n      clickMessage = \"Bummer! You already clicked on this one.\";\n\n      for (let i = 0; i < matches.length; i++) {\n        matches[i].clicked = false;\n      }\n\n      this.setState({ clickMessage });\n      this.setState({ correctGuesses });\n      this.setState({ matches });\n\n      // Otherwise, if clicked = false, and the user hasn't finished\n    } else if (correctGuesses < 11) {\n      // Set its value to true\n      clickedMatch[0].clicked = true;\n\n      // increment the appropriate counter\n      correctGuesses++;\n\n      clickMessage = \"Great! You haven't click on that one yet! Keep going!\";\n\n      if (correctGuesses > bestScore) {\n        bestScore = correctGuesses;\n        this.setState({ bestScore });\n      }\n\n      // Shuffle the array to be rendered in a random order\n      matches.sort(function (a, b) {\n        return 0.5 - Math.random();\n      });\n\n      // Set this.state.matches equal to the new matches array\n      this.setState({ matches });\n      this.setState({ correctGuesses });\n      this.setState({ clickMessage });\n    } else {\n      // Set its value to true\n      clickedMatch[0].clicked = true;\n\n      // restart the guess counter\n      correctGuesses = 0;\n\n      // Egg on the user to play again\n      clickMessage =\n        \"WOW!!! You got ALL of them!!! Now, let's see if you can do it again!\";\n      bestScore = 12;\n      this.setState({ bestScore });\n\n      for (let i = 0; i < matches.length; i++) {\n        matches[i].clicked = false;\n      }\n\n      // Shuffle the array to be rendered in a random order\n      matches.sort(function (a, b) {\n        return 0.5 - Math.random();\n      });\n\n      // Set this.state.matches equal to the new matches array\n      this.setState({ matches });\n      this.setState({ correctGuesses });\n      this.setState({ clickMessage });\n    }\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Clicky Movie Game</Title>\n\n        <h3 className=\"scoreSummary\">{this.state.clickMessage}</h3>\n\n        <h3 className=\"scoreSummary card-header\">\n          Correct Guesses: {this.state.correctGuesses}\n          <br />\n          Best Score: {this.state.bestScore}\n        </h3>\n        <div className=\"container\">\n          <div className=\"row\">\n            {this.state.matches.map((match) => (\n              <MatchCard\n                setClicked={this.setClicked}\n                id={match.id}\n                key={match.id}\n                image={match.image}\n              />\n            ))}\n          </div>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}